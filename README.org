SQLObject with web.py under mod_wsgi

* Problem
  A [[http://webpy.org/][web.py]] application's code running under the [[https://httpd.apache.org/][Apache HTTP Server]]'s [[https://code.google.com/p/modwsgi/][mod_wsgi]] will typically be executed in multiple processes/threads. Each process/thread will have its own database connection, and [[http://www.sqlobject.org][SQLObject]]'s default caching behavior can easily cause cache coherency issues.

* Solution
  Use a load hook that opens a new [[http://www.sqlobject.org/SQLObject.html#transactions][transaction]] for each handler call. If not running as a web.py application (e.g. running in an interactive interpreter for testing/debugging), just open a regular connection.
#+begin_src python
def load_sqlo(handler):
    con = connectionForURI('sqlite:mydatabase.db')
    if not web.ctx.has_key('env'):  # not using web.py
        sqlhub.processConnection = con
        return
    trans = con.transaction()
    sqlhub.threadConnection = trans
    try:
        return handler()
    except web.HTTPError:
        trans.commit(close=True)
        raise
    except:
        trans.rollback()
        trans.begin()
        raise
    finally:
        trans.commit(close=True)

app = web.application(urls, locals())
app.add_processor(load_sqlo)
#+end_src

* Example Code
  The code here is based directly on [[https://github.com/webpy/webpy.github.com/blob/master/cookbook/sqlalchemy.md][the SQLAlchemy]] documentation in the web.py cookbook. Before running the application, run =python models.py= to set up the SQLite database.

